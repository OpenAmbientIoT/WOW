{"version":3,"file":"js/app.8a49eb3b.js","mappings":"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","sources":["webpack://wavelets/./src/assets/js/helpers/id.js","webpack://wavelets/./src/assets/js/mqttclient.js","webpack://wavelets/./src/assets/js/classes/RenderingElement.js","webpack://wavelets/./src/assets/js/classes/WaveletElement.js","webpack://wavelets/./src/assets/js/classes/events/EventsConfig.js","webpack://wavelets/./src/assets/js/classes/RenderingConfig.js","webpack://wavelets/./src/assets/js/helpers/temperaturecolor.js","webpack://wavelets/./src/assets/js/helpers/time.js","webpack://wavelets/./src/components/WaveletComponent.vue","webpack://wavelets/./src/components/GridWaveletComponent.vue","webpack://wavelets/./src/components/GifWaveletComponent.vue","webpack://wavelets/./src/assets/js/helpers/trim.js","webpack://wavelets/./src/assets/js/classes/EventsBuilder.js","webpack://wavelets/./src/assets/js/helpers/csv.js","webpack://wavelets/./src/assets/js/helpers/sound.js","webpack://wavelets/./src/assets/js/helpers/rssi.js","webpack://wavelets/./src/components/DisplayComponent.vue","webpack://wavelets/./src/components/DisplayComponent.vue?40fe","webpack://wavelets/./src/App.vue","webpack://wavelets/./src/main.js","webpack://wavelets/webpack/bootstrap","webpack://wavelets/webpack/runtime/chunk loaded","webpack://wavelets/webpack/runtime/compat get default export","webpack://wavelets/webpack/runtime/define property getters","webpack://wavelets/webpack/runtime/global","webpack://wavelets/webpack/runtime/hasOwnProperty shorthand","webpack://wavelets/webpack/runtime/make namespace object","webpack://wavelets/webpack/runtime/node module decorator","webpack://wavelets/webpack/runtime/publicPath","webpack://wavelets/webpack/runtime/jsonp chunk loading","webpack://wavelets/webpack/startup"],"sourcesContent":["const ids = new Map()\nexport function generate(alreadyGenerated = null) {\n    let generated = false\n    while (!generated) {\n        const uid = (\"0000\" + ((Math.random() * Math.pow(36, 4)) | 0).toString(36)).slice(-4)\n        if (!alreadyGenerated) {\n            alreadyGenerated = ids\n        }\n\n        if (!alreadyGenerated.get(uid)) {\n            generated = true\n            alreadyGenerated.set(uid, true)\n            return uid\n        }\n    }\n}\n","import mqtt from 'mqtt/dist/mqtt'\nimport {generate} from \"@/assets/js/helpers/id\"\nclass ClientMQTT {\n\n    constructor() {\n        this.connection = {\n            host: 'c4584ed806fd4a70bc09a60417504f7f.s1.eu.hivemq.cloud', //+\n            //host: 'test.mosquitto.org',\n            port: 8884, // +\n            endpoint: '/mqtt',\n            clean: true,\n            connectTimeout: 4000,\n            // reconnectPeriod value required if reconnection needed\n            // Connection (and data receiving) can be interrupted if used more than one app instance simultaneously\n            // This interruption can be a specific broker limitation (Hive) or, maybe, websockets itself\n            reconnectPeriod: 10,\n            clientId: 'client-id-' + generate() + '-' + generate(),\n            username: 'testuser',\n            password: 'password',\n        }\n        this.subscription = {\n            topic: 'TELEMETRY',\n            qos: 0,\n        }\n        //this.publish = {\n        //    topic: 'topic/from_browser',\n        //    qos: 0,\n        //    payload: '{ \"msg\": \"Hello\" }',\n        //}\n\n        this.receivedMessages = ''\n        this.qosList = [\n            {label: 0, value: 0},\n            {label: 1, value: 1},\n            {label: 2, value: 2},\n        ]\n        this.client = {\n            connected: false,\n        }\n        this.subscribeSuccess = false\n\n        this.data = new Map()\n    }\n\n    onConnectionLost() {\n        console.log('onConnectionLost');\n    }\n    createConnection(callback, statusInformer) {\n        const {host, port, endpoint, ...options} = this.connection\n        const connectUrl = `wss://${host}:${port}${endpoint}`\n        try {\n            this.client = mqtt.connect(connectUrl, options)\n            mqtt.onConnectionLost = this.onConnectionLost;\n        } catch (error) {\n            console.log('mqtt.connect error', error)\n        }\n        this.client.on('connect', () => {\n            if (typeof statusInformer == 'function') {\n                statusInformer('orange')\n            }\n            console.log('Connection succeeded!')\n        })\n        this.client.on('onConnectionLost', () => {\n            console.log('Connection lost!!')\n        })\n        this.client.on('error', error => {\n            console.log('Connection failed', error)\n        })\n        this.client.on('message', (topic, message) => {\n            // Not required\n            //this.receivedMessages = this.receivedMessages.concat(message)\n\n            // Here is strange that message encoded... to UTF8 chars codes?\n            let msg = new TextDecoder().decode(message)\n                //decodeURIComponent(escape(String.fromCharCode(...message)));\n            // Do something with message (render)\n            if (typeof callback == 'function') {\n                callback(msg)\n            }\n\n            if (typeof statusInformer == 'function') {\n                statusInformer('green')\n            }\n\n            //console.log(`Received message ${msg} from topic ${topic}`)\n        })\n    }\n\n    doSubscribe() {\n        const {topic, qos} = this.subscription\n        this.client.subscribe(topic, qos, (error, res) => {\n            if (error) {\n                console.log('Subscribe to topics error', error)\n                return\n            }\n            this.subscribeSuccess = true\n            console.log('Subscribe to topics res', res)\n        })\n    }\n\n    doUnSubscribe() {\n        const {topic} = this.subscription\n        this.client.unsubscribe(topic, error => {\n            if (error) {\n                console.log('Unsubscribe error', error)\n            }\n        })\n    }\n\n    doPublish() {\n        const {topic, qos, payload} = this.publish\n        this.client.publish(topic, payload, qos, error => {\n            if (error) {\n                console.log('Publish error', error)\n            }\n        })\n    }\n\n    destroyConnection() {\n        if (this.client.connected) {\n            try {\n                this.client.end()\n                this.client = {\n                    connected: false,\n                }\n                console.log('Successfully disconnected!')\n            } catch (error) {\n                console.log('Disconnect failed', error.toString())\n            }\n        }\n    }\n}\n\n\nconst mqttclient = new ClientMQTT()\n\nexport default mqttclient\n","export default class RenderingElement {\n    constructor() {\n        this.id = null\n        this.x = 0\n        this.y = 0\n        this.created = Date.now()\n\n        this.size = 128\n        this.basicSize = 128\n        this.diskSize = 128\n        this.colored = false\n        this.debug = false\n\n        this.event = {\n            tag: '',\n            name: '',\n            value: '',\n            raw: '',\n            timestamp: '',\n        }\n\n        this.predecessor = null\n\n        this.rendering = {\n\n        }\n    }\n\n    inject(data) {\n        if (data) {\n            this.x = data.x ? data.x : 0\n            this.y = data.y ? data.y : 0\n        }\n    }\n}\n","import RenderingElement from \"@/assets/js/classes/RenderingElement\";\nexport default class WaveletElement extends RenderingElement {\n    constructor() {\n        super();\n\n        this.type = 'wavelet'\n        this.color = 'rgb(255,255,255)'\n        this.options = {\n            fadein: false,\n            fadeout: false,\n            ringsFadeout: false,\n        }\n    }\n}\n","export const TEMP_C = 'TEMP_C'\nexport const DBUG = 'DBUG'\nexport const ACTV = 'ACTV'\nexport const LOCH = 'LOCH'\nexport const GEOLOC = 'GEOLOC'\nexport const RSSI = 'RSSI'\nexport const eventsConfig = {\n    eventsTypes: [\n        {\n            name: TEMP_C,\n            enabled: true,\n        },\n        {\n            name: DBUG,\n            enabled: true,\n        },\n        {\n            name: ACTV,\n            enabled: true,\n        },\n        {\n            name: LOCH,\n            enabled: true,\n        },\n        {\n            name: GEOLOC,\n            enabled: true,\n        },\n        {\n            name: RSSI,\n            enabled: true,\n        },\n    ],\n}","export const SVG = 'SVG'\nexport const GIF = 'GIF'\nexport const WEBGL = 'WEBGL'\nexport const renderingConfig = {\n    types: [\n        {\n            name: SVG,\n            description: 'transp, mid perf',\n            enabled: true,\n        },\n        {\n            name: WEBGL,\n            description: 'dsbld, transp, higher perf, β',\n            enabled: false,\n        },\n        {\n            name: GIF,\n            description: 'non-transp. high perf',\n            enabled: false,\n        },\n    ],\n}\n","export function hueColor(temperature, minCelsius, maxCelsius) {\n\n    // HSL wheel counterclockwise from 0\n    // to go clockwise, make maxHsl and minHsl negative\n    let maxHsl = 370 // maxHsl maps to max temp (here: 10deg to 360)\n    let minHsl = 250 //  minhsl maps to min temp\n    let rngHsl = maxHsl - minHsl\n\n    let rngTemp = maxCelsius - minCelsius\n    let degCnt = maxCelsius - temperature\n    let hslsDeg = rngHsl / rngTemp\n    return (360 - ((degCnt * hslsDeg) - (maxHsl - 360)))\n}\n\nexport function rgbColor(temperature, minCelsius, maxCelsius) {\n\n\n    const h = hueColor(temperature, minCelsius, maxCelsius)\n    let s = 100\n    let l = 50\n    //285 - 305 / Make purple darker correction\n    if (h > 280 && h <325) {\n        l = 50\n        s = 30\n    }\n    s /= 100;\n    l /= 100;\n    const k = n => (n + h / 30) % 12;\n    const a = s * Math.min(l, 1 - l);\n    const f = n =>\n        l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n    return [255 * f(0), 255 * f(8), 255 * f(4)];\n}\n","export function humanReadableTime(timestamp) {\n    const date = new Date(timestamp)\n    const hours = date.getHours()\n    const minutes = date.getMinutes()\n    const seconds = date.getSeconds()\n    return (hours < 10 ? '0' + hours : hours) + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds) + '.' + date.getMilliseconds()\n}\n","import script from \"./WaveletComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WaveletComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./GridWaveletComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GridWaveletComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GridWaveletComponent.vue?vue&type=style&index=0&id=06f2dc5c&scoped=true&lang=sass\"\n\nimport exportComponent from \"/Users/andrew/_Upwork Projects/Wiliot/Wow Project/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06f2dc5c\"]])\n\nexport default __exports__","import script from \"./GifWaveletComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GifWaveletComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GifWaveletComponent.vue?vue&type=style&index=0&id=73db6dd4&scoped=true&lang=sass\"\n\nimport exportComponent from \"/Users/andrew/_Upwork Projects/Wiliot/Wow Project/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-73db6dd4\"]])\n\nexport default __exports__","export function trim(str, ch) {\n    var start = 0,\n        end = str.length;\n\n    while(start < end && str[start] === ch)\n        ++start;\n\n    while(end > start && str[end - 1] === ch)\n        --end;\n\n    return (start > 0 || end < str.length) ? str.substring(start, end) : str;\n}\n","import {trim} from \"@/assets/js/helpers/trim\"\nimport {ACTV} from \"@/assets/js/classes/events/EventsConfig\";\n\nexport default class EventsBuilder {\n    constructor() {\n    }\n\n\n    static parse(string, eventsTypes) {\n        //events,tagId=(01)00850027865010(21)00oeT4035,eventName=TEMP_C,eventValue=15.53504436835706,timestamp=1655924635\n        const message_pieces = trim(string, '\"').split(',')\n\n        // Get only events\n        if (message_pieces[0] && message_pieces[0] == 'events') {\n\n            // Iterate over events and check if message belongs to an enabled\n            let isEventEnabled = false\n            eventsTypes.forEach((eventType) => {\n                const messageHasEvent = message_pieces.some(msg => msg.includes('eventName=' + eventType.name))\n                if (eventType.enabled && messageHasEvent) {\n                    isEventEnabled = true\n                }\n            })\n\n\n            if (isEventEnabled) {\n                const event = {}\n                message_pieces.forEach(msg_piece => {\n                    if (msg_piece.includes('tagId')) {\n                        event.tag = msg_piece.replace('tagId=', '')\n                    }\n                    // TEMP_C, DBUG, ACTV, ...\n                    if (msg_piece.includes('eventName')) {\n                        event.name = msg_piece.replace('eventName=', '')\n                    }\n                    if (msg_piece.includes('eventValue')) {\n                        event.value = Number.parseFloat(msg_piece.replace('eventValue=', '')).toFixed(1)\n                        event.raw = msg_piece.replace('eventValue=', '')\n                    }\n                    if (msg_piece.includes('timestamp')) {\n                        event.timestamp = parseInt(msg_piece.replace('timestamp=', ''))\n                    }\n                })\n                // Skip ACTV with 0 values\n                if (event.name === ACTV && (parseInt(event.value) === 0)) {\n                    return  null\n                }\n                return event\n            }\n        }\n        return null\n    }\n}\n","\n// Event – file input changed event; into – reactive (ref) map id list\n// Todo Currently is not using\nexport function loadFile(event, into) {\n    let input = event.target;\n    const reader = new FileReader();\n    reader.onload = function () {\n        console.log('Loaded file:');\n        console.log(reader.result.substring(0, 200));\n        into.value = parse(reader.result)\n    };\n\n    reader.readAsText(input.files[0]);\n}\n\n\nexport function parse(list) {\n    const coordinates = new Map()\n\n    if (!list) {\n        return coordinates\n    }\n\n    const rows = list.replace(/\\r\\n/g, '\\n').split('\\n')\n\n    rows.forEach((line) => {\n        const splited = line.split(',')\n        if (splited[0] != 'ID') { // Skip first line 'ID,1080X,1080Y,SIZE,,,,,,,,'\n            const tag = splited[0].replace('tagId=', '')\n            const x = parseInt(splited[1])\n            const y = parseInt(splited[2])\n            const settings = {x: x, y: y}\n            settings.tag = tag\n            // If wavelet size specified in csv\n            const size = parseFloat(splited[3])\n            if (size) {\n                settings.size = size\n            }\n            coordinates.set(tag, settings)\n        }\n    })\n\n\n    return coordinates;\n}","export const soundLibrary = {\n    files: [\n        'beep.mp3',\n        'beeps.mp3',\n        'beept.mp3',\n        'bell-clean.mp3',\n        'bell-deep.mp3',\n        'bell-high.mp3',\n        'bell-little.mp3',\n        'bell-ok.mp3',\n        'bell-small-cut.mp3',\n        'bell-soft.mp3',\n        'bellllll.mp3',\n        'bip.mp3',\n        'bleep.mp3',\n        'string.mp3',\n        'twit.mp3'\n    ]\n}","/**\n * last, can you change the scaling factor equation to this:\n * size = (Disk Size)*(Scale Factor / 10) *(average RSSI / RSSI)\n *\n * where:\n * size = rendered RSSI event size\n * disk size = user input disk size\n * scale factor = user input scale factor\n * RSSI = RSSI event data\n * average RSSI = 65\n *\n * Convert RSSI value to wavelet size\n * @param {number} avgRssi  Average RSSI value\n * @param {number} rssi  RSSI value (higher value = lower signal) (suggested: e.g 80 meaning -80db, 60 — -60db, etc.)\n * @param {number} scale Multiplier for final size\n * @param {number} size UI disk size\n */\nexport function toSize(avgRssi, rssi, scale, size) {\n    return size * (scale/10) * (avgRssi/rssi)\n}\n\n/**\n *\n * @param {Map} rssis List of RSSI values for tags\n * @returns {number} Average RSSI value\n */\nexport function calculateAverageRssi(rssis) {\n    let sum = 0\n    rssis.forEach((value) => {\n        sum += Number.parseFloat(value)\n    })\n    return (sum / rssis.size).toFixed(1)\n}\n\nimport {RSSI, TEMP_C, DBUG, ACTV, LOCH, GEOLOC} from \"@/assets/js/classes/events/EventsConfig\"\n\n/**\n * RSSI config\n * resizeEvents – events list for which will be applied calculated RSSI size if enabled\n * @type {{resizeEvents: [{event: string, enabled: boolean},{event: string, enabled: boolean},{event: string, enabled: boolean},{event: string, enabled: boolean},{event: string, enabled: boolean},null]}}\n */\nexport const rssiConfig = {\n    resizeEvents: [\n        {\n            event: RSSI,\n            enabled: true,\n        },\n        {\n            event: TEMP_C,\n            enabled: true,\n        },\n        {\n            event: DBUG,\n            enabled: true,\n        },\n        {\n            event: ACTV,\n            enabled: true,\n        },\n        {\n            event: LOCH,\n            enabled: true,\n        },\n        {\n            event: GEOLOC,\n            enabled: true,\n        },\n    ]\n}\n\nexport function isRssiSizeForEventEnabled(event) {\n    return rssiConfig.resizeEvents.find(eventConf => (eventConf.event === event && eventConf.enabled === true))\n}\n\nexport function isRssiSizeForEventEnabledI(event) {\n    let eventEnabled = false\n    rssiConfig.resizeEvents.forEach((eventConf) => {\n        if (eventConf.event == event && eventConf.enabled === true) {\n            eventEnabled = true\n        }\n    })\n    return eventEnabled\n}\n\nexport function isRssiSizeForEventEnabledA(event) {\n    const enabled = rssiConfig.resizeEvents.map((eventConf) => {\n        if (eventConf.event == event && eventConf.enabled === true) {\n            return true\n        }\n        return false\n    })\n\n    return enabled\n}","<template>\n  <div :class=\"'display' + (backgroundEnabled && !backgroundVideo ? ' display_bg display_bg-img' : '')\" v-on:mousemove=\"updateCoordinates\"\n       :style=\"(gridMode && crosshairCursor ? 'cursor: crosshair;' : '') + (gridMode ? 'box-shadow: inset 0 0 0 2px wheat;' : '')\">\n\n<!--    Video BG -->\n    <video v-if=\"backgroundEnabled && backgroundVideo\" autoplay muted loop id=\"video\">\n      <source src=\"@/static/backgrounds/video.mp4\" type=\"video/mp4\">\n    </video>\n\n    <!-- Wavelets to display -->\n    <!-- Canvas/webgl -->\n    <div v-if=\"selectedRenderingType === WEBGL\" id=\"canvas-container\"></div>\n    <!-- SVG, GIF, VIDEO -->\n    <template v-if=\"selectedRenderingType !== WEBGL\">\n      <template v-for=\"[key, wavelet] in wavelets\" :key=\"key\">\n        <WaveletComponent v-if=\"selectedRenderingType === SVG\" :wavelet=\"wavelet\"/>\n        <GifWaveletComponent v-if=\"selectedRenderingType === GIF\" :wavelet=\"wavelet\"/>\n      </template>\n    </template>\n\n\n    <!-- Grid mode enabled -->\n    <template v-if=\"gridMode\">\n      <template v-for=\"[key, map] in idsMap\" :key=\"key\">\n        <GridWaveletComponent :size=\"basicSize\" :map=\"map\"/>\n      </template>\n\n      <!-- Coordinates tooltip -->\n      <div class=\"mouse-coordinates-tooltip\"\n           :style=\"'top: ' + mouseTooltip.position.y + 'px; left: ' + mouseTooltip.position.x + 'px;'\">\n        <span class=\"me-3\"><span class=\"fw-lighter opacity-75\">X:</span> {{ mouse_x }}</span>\n        <span><span class=\"fw-lighter opacity-75\">Y:</span> {{ mouse_y }}</span>\n      </div>\n    </template>\n\n    <div class=\"ui-wrapper mb-3\" :style=\"uiConfiguration.positions[uiPosition].style\">\n      <div class=\"ui-container-toggle\" :style=\"(idsMap.size === 0 ? 'display: block !important; ' : '')\">\n\n        <!-- Connection status -->\n        <div class=\"connection-status mb-3\" :class=\"connectionStatus\"\n             :style=\"'background-color:' + connectionStatus + '; opacity: ' + (connectionState ? 1 : .4) + ';'\"></div>\n\n        <!--CSV upload-->\n        <div class=\"mb-3\">\n          <label for=\"map-file-upload\" class=\"form-label small\"><span class=\"text-white-50\">Upload map CSV</span>\n            (<span\n                :style=\"idsMap.size === 0 ? 'color: red' : 'color: green'\"> {{ idsMap.size }} ids loaded</span>)</label>\n          <input class=\"form-control form-control-sm\" id=\"map-file-upload\" type=\"file\" @change=\"openFile\">\n        </div>\n        <hr>\n\n        <!--Simulate wavelets switch-->\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"simulationMode\" id=\"sim-checkbox\"\n                 @change=\"simulationSwitched\">\n          <label class=\"form-check-label\" for=\"sim-checkbox\" style=\"color: white\">\n            Enable simulation ▹\n          </label>\n        </div>\n        <div>\n        <div class=\"text-white-50 me-3 mb-2\">Average events per second</div>\n        <input class=\"form-control form-control-sm mb-2\" type=\"number\" placeholder=\"Amount\"\n               style=\"max-width: 80px\" v-model=\"simulatedAverageEventsPerSecond\">\n        </div>\n        <hr>\n\n        <!--Grid look switch-->\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"gridMode\" id=\"grid-checkbox\">\n          <label class=\"form-check-label\" for=\"grid-checkbox\" style=\"color: white\">\n            Grid mode ܍\n          </label>\n        </div>\n        <!-- Crosshair cursor switch        -->\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"crosshairCursor\" id=\"crosshair-checkbox\">\n          <label class=\"form-check-label\" for=\"crosshair-checkbox\" style=\"color: white\">\n            Crosshair cursor\n          </label>\n        </div>\n        <hr>\n        <!-- Background -->\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"backgroundEnabled\" id=\"background-enable-checkbox\">\n          <label class=\"form-check-label\" for=\"background-enable-checkbox\" style=\"color: white\">\n            Enable background\n          </label>\n        </div>\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"backgroundVideo\" id=\"background-video-checkbox\">\n          <label class=\"form-check-label\" for=\"background-video-checkbox\" style=\"color: white\">\n            Use video\n          </label>\n        </div>\n        <hr>\n\n        <!--Coloring wavelets-->\n        <div class=\"form-check form-switch mb-3 d-none\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"isColorWavelets\" id=\"color-wavelets-checkbox\">\n          <label class=\"form-check-label\" for=\"color-wavelets-checkbox\" style=\"color: white\">\n            Colorize wavelets\n          </label>\n        </div>\n        <hr class=\"d-none\">\n\n        <!--Play sound-->\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"isSoundOn\" id=\"sound-on-checkbox\">\n          <label class=\"form-check-label\" for=\"sound-on-checkbox\" style=\"color: white\">\n            Sound 🔉\n          </label>\n        </div>\n        <div class=\"form-check form-switch mb-3\">\n          <input class=\"form-check-input\" type=\"checkbox\" v-model=\"isSoundSimultaneous\"\n                 id=\"sound-simultaneous-checkbox\">\n          <label class=\"form-check-label\" for=\"sound-simultaneous-checkbox\" style=\"color: white\">\n            Play simultaneous\n          </label>\n        </div>\n        <!-- specify mp3 -->\n        <div class=\"text-white-50 small mb-2\">Select mp3</div>\n        <select class=\"form-select form-select-sm mb-1\" aria-label=\"\" v-model=\"soundFileName\"\n                @change=\"soundFileChanged\">\n          <option v-for=\"file in soundLibrary.files\" :value=\"file\" :key=\"file\">{{ file }}</option>\n        </select>\n        <!-- upload mp3 -->\n        <div class=\"mb-3\">\n          <label for=\"mp3-upload\" class=\"form-label small\"><span class=\"text-white-50\">Or upload mp3</span></label>\n          <input class=\"form-control form-control-sm\" id=\"mp3-upload\" type=\"file\" @change=\"uploadMp3\">\n        </div>\n        <hr>\n\n        <!-- Basic wavelet size -->\n        <div>\n          <div class=\"text-white-50 me-3 mb-2\">Basic wavelet size ↔</div>\n          <input class=\"form-control form-control-sm mb-2\" type=\"number\" placeholder=\"Size in pixels\"\n                 style=\"max-width: 80px\" v-model=\"basicSize\">\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"basicSize = 32\">32</button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"basicSize = 64\">64</button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"basicSize = 128\">128\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"basicSize = 196\">196\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"basicSize = 256\">256\n          </button>\n        </div>\n        <hr>\n\n        <!-- Disk size -->\n        <div>\n          <div class=\"text-white-50 me-3 mb-2\">Disk size ↔</div>\n          <input class=\"form-control form-control-sm mb-2\" type=\"number\" placeholder=\"Size in pixels\"\n                 style=\"max-width: 80px\" v-model=\"diskSize\">\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"diskSize = 32\">32</button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"diskSize = 64\">64</button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"diskSize = 128\">128\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"diskSize = 196\">196\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-sm me-2\" v-on:click=\"diskSize = 256\">256\n          </button>\n        </div>\n        <hr>\n\n        <!-- Rssi scale factor -->\n        <div>\n          <div class=\"text-white-50 me-3 mb-2\">RSSI scale factor</div>\n          <input class=\"form-control form-control-sm mb-2 d-inline-block\" type=\"number\" placeholder=\"Size in pixels\"\n                 style=\"max-width: 80px\" v-model=\"rssiScaleFactor\"> <span\n            class=\"text-muted small ms-3\"> Average RSSI {{ averageRssi }}</span>\n          <div class=\"text-muted mt-1 font-monospace\" style=\"font-size: 9px\">ui size * (scale/10) * (average\n            rssi/rssi)\n          </div>\n        </div>\n        <hr>\n\n        <!-- Color disk timeout -->\n        <div>\n          <div class=\"text-white-50 me-3 mb-2\">Color disk timeout, s</div>\n          <input class=\"form-control form-control-sm mb-2\" type=\"number\" placeholder=\"Amount in seconds\"\n                 style=\"max-width: 80px\" v-model=\"temperatureDiskTimeout\">\n        </div>\n        <hr>\n\n        <!-- Min Max Temp settings -->\n        <div class=\"row\">\n          <div class=\"col\">\n            <div class=\"text-white-50 me-3 mb-2\">Min t</div>\n            <input class=\"form-control form-control-sm mb-2\" type=\"number\" placeholder=\"Min t\" v-model=\"minCelsius\">\n          </div>\n          <div class=\"col\">\n            <div class=\"text-white-50 me-3 mb-2\">Max t</div>\n            <input class=\"form-control form-control-sm mb-2\" type=\"number\" placeholder=\"Max t\" v-model=\"maxCelsius\">\n          </div>\n        </div>\n        <hr>\n\n        <!-- Rendering type -->\n        <div>\n          <span class=\"text-white-50 me-1\">Rendering type</span>\n          <div class=\"form-check form-switch mb-1\" v-for=\"renderingType in renderingTypes\" :key=\"renderingType.name\">\n            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"renderingType.enabled\"\n                   v-on:change=\"renderingTypeChanged\" :value=\"renderingType.name\"\n                   :id=\"`rendering-type-checkbox-${renderingType.name}`\">\n            <label class=\"form-check-label\" :for=\"`rendering-type-checkbox-${renderingType.name}`\" style=\"color: white\">\n              {{ renderingType.name }} <sup><span class=\"small text-white-50\">{{\n                renderingType.description\n              }}</span></sup>\n            </label>\n          </div>\n        </div>\n        <hr>\n\n        <!-- Handle events -->\n        <div>\n          <span class=\"text-white-50 me-1\">Handle events</span>\n          <div class=\"form-check form-switch mb-1\" v-for=\"eventType in eventsTypes\" :key=\"eventType.name\">\n            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"eventType.enabled\"\n                   :id=\"`handle-wavelets-checkbox-${eventType.name}`\">\n            <label class=\"form-check-label\" :for=\"`handle-wavelets-checkbox-${eventType.name}`\" style=\"color: white\">\n              {{ eventType.name }}\n            </label>\n          </div>\n          <div class=\"form-check form-switch mb-1\">\n            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"debugMode\" id=\"debug-wavelets-checkbox\">\n            <label class=\"form-check-label\" for=\"debug-wavelets-checkbox\" style=\"color: rosybrown\">\n              Debug mode\n            </label>\n          </div>\n        </div>\n        <hr>\n\n        <!-- RSSI size for events -->\n        <div>\n          <span class=\"text-white-50 me-1\">RSSI-based size</span>\n          <div class=\"form-check form-switch mb-1\" v-for=\"rssiResizeEvent in rssiResizeEvents\"\n               :key=\"rssiResizeEvent.event\">\n            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"rssiResizeEvent.enabled\"\n                   :id=\"`rssi-event-size-checkbox-${rssiResizeEvent.event}`\">\n            <label class=\"form-check-label\" :for=\"`rssi-event-size-checkbox-${rssiResizeEvent.event}`\"\n                   style=\"color: white\">\n              {{ rssiResizeEvent.event }}\n            </label>\n          </div>\n        </div>\n        <hr>\n\n        <!-- Console log -->\n        <div>\n          <span class=\"text-white-50 me-1\">Console log</span>\n          <div class=\"form-check form-switch mb-1\" v-for=\"consoleSetting in consoleSettings\" :key=\"consoleSetting.name\">\n            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"consoleSetting.state.value\"\n                   :id=\"`console-log-checkbox-${consoleSetting.name}`\">\n            <label class=\"form-check-label\" :for=\"`console-log-checkbox-${consoleSetting.name}`\" style=\"color: white\">\n              {{ consoleSetting.name }}\n            </label>\n          </div>\n        </div>\n        <hr>\n\n\n        <!--UI Position-->\n        <div>\n          <span class=\"text-white-50 me-3\">UI position</span>\n          <button type=\"button\" class=\"btn btn-outline-light btn-sm me-2\" v-on:click=\"uiPosition = 0\">↖ Left</button>\n          <button type=\"button\" class=\"btn btn-outline-light btn-sm\" v-on:click=\"uiPosition = 1\">Right ↗</button>\n        </div>\n        <hr>\n\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {ref, onMounted, reactive, watch, onBeforeMount} from 'vue'\n\nlet appSettings = {}\n// Get saved app settings\nif (localStorage.getItem('appSettings')) {\n  appSettings = JSON.parse(localStorage.getItem('appSettings'))\n} else {\n  localStorage.setItem('appSettings', JSON.stringify(appSettings))\n}\n\nconst wavelets = ref(new Map())\nconst idsMap = ref(new Map())\nconst rssi = ref(new Map())\nconst rssiScaleFactor = ref(1)\nconst temperatureDiskTimeout = ref(15)\n\nconst backgroundEnabled = ref(false)\nconst backgroundVideo = ref(false)\n\nconst gridMode = ref(false)\nconst consoleEvents = ref(false)\nconst consoleRenderingInfo = ref(false)\nconst consoleLifetimeInfo = ref(false)\nconst consoleFadingInfo = ref(false)\nlet consoleSettings = [\n  {state: consoleEvents, name: 'Events'},\n  {state: consoleRenderingInfo, name: 'Rendering'},\n  {state: consoleLifetimeInfo, name: 'Lifetime'},\n  {state: consoleFadingInfo, name: 'Fading'}\n]\n\nimport mqttclient from \"@/assets/js/mqttclient\";\nimport WaveletElement from \"@/assets/js/classes/WaveletElement\";\n\n// eslint-disable-next-line\nfunction connect() {\n  mqttclient.createConnection(process, renderConnection)\n  mqttclient.doSubscribe()\n}\n\nfunction disconnect() {\n  mqttclient.doUnSubscribe()\n  mqttclient.destroyConnection()\n}\n\n\nimport {eventsConfig, RSSI, TEMP_C} from \"@/assets/js/classes/events/EventsConfig\";\nimport {renderingConfig, SVG, GIF, WEBGL} from \"@/assets/js/classes/RenderingConfig\";\n\n\nconst renderingTypes = (appSettings.renderingTypes ? reactive(appSettings.renderingTypes) : reactive(renderingConfig.types))\n\nconst rssiResizeEvents = (appSettings.rssiResizeEvents ? reactive(appSettings.rssiResizeEvents) : reactive(rssiConfig.resizeEvents))\n\nconst eventsTypes = (appSettings.eventsTypes ? reactive(appSettings.eventsTypes) : reactive(eventsConfig.eventsTypes))\n// Watch event types list changed to clear RSSI from values\nwatch(eventsTypes, (newEventsTypes) => {\n  newEventsTypes.forEach((eventType) => {\n    if (eventType.name == RSSI && !eventType.enabled) {\n      rssi.value.clear()\n      averageRssi.value = 70\n    }\n  })\n})\n\n\nimport {rgbColor} from \"@/assets/js/helpers/temperaturecolor\"\nimport {humanReadableTime} from \"@/assets/js/helpers/time\"\nimport WaveletComponent from \"@/components/WaveletComponent\"\nimport GridWaveletComponent from \"@/components/GridWaveletComponent\"\nimport GifWaveletComponent from \"@/components/GifWaveletComponent\"\nimport EventsBuilder from \"@/assets/js/classes/EventsBuilder\"\n\n\nconst minCelsius = ref(20)\nconst maxCelsius = ref(30)\nconst averageRssi = ref(70)\n//let lastRssiCalculation = 0\n\n\n// Parse event message, create wavelet element, inject necessary data into wavelet\nfunction process(message) {\n  if (gridMode.value === true) {\n    return false\n  }\n\n  if (consoleEvents.value) console.log(message)\n\n  if (typeof message == 'string') {\n    // Get event data\n    const event = EventsBuilder.parse(message, eventsTypes)\n    if (event) {\n\n      // Add RSSI value (don't add to wavelets list) and calculate average RSSI\n      if (event.name === RSSI) {\n        rssi.value.set(event.tag, event.raw)\n        // Prevent from average being calculated too often\n        //const secondsPassed = Math.floor((new Date() - lastRssiCalculation)/1000)\n        //if (lastRssiCalculation === 0 || secondsPassed > 60) {\n        //  averageRssi.value = calculateAverageRssi(rssi.value)\n        //  lastRssiCalculation = new Date()\n        //}\n      }\n\n      // Get element tagCsvData (csv data)\n      if (consoleEvents.value) console.log(event)\n      const tagCsvData = idsMap.value.get(event.tag)\n      if (tagCsvData) {\n        // Create new wavelet element\n        const wavelet = new WaveletElement();\n        wavelet.event = event\n        wavelet.id = event.tag\n        // When non TEMP_C event check if we have already TEMP_C wavelet\n        if (event.name !== TEMP_C && wavelets.value.has(event.tag)) {\n          const existing = wavelets.value.get(event.tag)\n          if (existing.event.name === TEMP_C) {\n            wavelet.predecessor = existing\n          } else if (existing.predecessor && existing.predecessor.event.name === TEMP_C) {\n            wavelet.predecessor = existing.predecessor\n          }\n          // Update current event timestamp to increase living time to predecessor\n          // !!! not necessary since we are using 'wavelet.created' value\n          if (wavelet.predecessor && (wavelet.predecessor.event.timestamp > wavelet.event.timestamp)) {\n            wavelet.event.timestamp = wavelet.predecessor.event.timestamp\n          }\n        }\n\n        const color = rgbColor(wavelet.event.value, minCelsius.value, maxCelsius.value)\n        wavelet.color = `rgb(${color[0]},${color[1]},${color[2]})`\n\n        // Get size\n        let size = basicSize.value\n        // Try RSSI\n        if (rssi.value.has(event.tag) && isRssiSizeForEventEnabled(event.name)) {\n          size = toSize(averageRssi.value, rssi.value.get(event.tag), rssiScaleFactor.value, basicSize.value)\n          // Try CSV data\n        } else if (tagCsvData.size) {\n          size = tagCsvData.size\n        }\n        wavelet.size = size\n\n        wavelet.basicSize = basicSize.value\n        wavelet.diskSize = diskSize.value\n\n        wavelet.colored = isColorWavelets.value\n        wavelet.debug = debugMode.value\n        wavelet.inject(tagCsvData)\n        wavelets.value.set(event.tag, wavelet)\n\n        // Console\n        if (consoleRenderingInfo.value) console.log('Tag ' + event.tag + ' (' + event.timestamp + ' / ' + humanReadableTime(event.timestamp) + ') is in map. Render.')\n\n        // Sound\n        if (isSoundOn.value) {\n          if (isSoundSimultaneous.value) {\n            sound = new Audio(soundFilePath)\n          }\n          sound.play()\n        }\n\n        // Canvas Case\n        if (selectedRenderingType.value === WEBGL) {\n          drawWavelet(wavelet)\n        }\n      } else {\n        // Console\n        if (consoleRenderingInfo.value) console.log('Tag ' + event.tag + ' (' + event.timestamp + ' / ' + humanReadableTime(event.timestamp) + ') is not in map!')\n      }\n    } else {\n      if (consoleEvents.value) console.log('Skip message \"' + message + '\" (disabled or can\\'t parse)')\n    }\n  }\n}\n\nimport {parse} from \"@/assets/js/helpers/csv\"\n\nfunction openFile(event) {\n  let input = event.target;\n  const reader = new FileReader();\n  reader.onload = function () {\n    idsMap.value = parse(reader.result)\n    console.log('Uploaded CSV:');\n    console.log(reader.result.substring(0, 200));\n  };\n\n  reader.readAsText(input.files[0]);\n}\n\n\nconst simulationMode = ref(false)\n\nfunction simulationSwitched() {\n  if (simulationMode.value === true) {\n    disconnect()\n    connectionStatus.value = 'green'\n    runSimulation()\n  } else {\n    connectionStatus.value = 'red'\n    connect()\n  }\n}\n\nconst simulatedAverageEventsPerSecond = ref(1)\nfunction runSimulation() {\n  if (simulationMode.value === false) {\n    return false\n  }\n  connectionState.value = !connectionState.value\n  const message = generateMessage()\n  process(message)\n  const divider = simulatedAverageEventsPerSecond.value > 0 ? simulatedAverageEventsPerSecond.value : 1\n  setTimeout(runSimulation, 1000 / divider)\n}\n\nconst connectionState = ref(true)\nconst connectionStatus = ref('red')\n\nfunction renderConnection(status) {\n  connectionState.value = !connectionState.value\n  connectionStatus.value = status\n}\n\nimport {ACTV} from \"@/assets/js/classes/events/EventsConfig\"\nfunction generateMessage() {\n  //events,tagId=(01)00850027865010(21)00oeT4035,eventName=TEMP_C,eventValue=15.53504436835706,timestamp=1655924635\n  const min = 4000\n  const max = 5026\n  const min_t = 15\n  const max_t = 27\n  const tag = '(01)00850027865010(21)00oeT' + (Math.floor(Math.random() * (max - min) + min)).toString()\n  let value = (Math.random() * (max_t - min_t) + min_t).toFixed(4)\n  // Get random event type from the list\n  const eventsType = eventsTypes[Math.floor(Math.random() * eventsTypes.length)];\n  if (eventsType.name === ACTV) {\n    value = Math.round((Math.random()))\n  }\n  let message = 'events,tagId=' + tag + ',eventName=' + eventsType.name + ',eventValue=' + value + ',timestamp=' + Date.now()\n  return message\n}\n\nfunction inspectWavelets() {\n  const now = Date.now()\n  wavelets.value.forEach((wavelet) => {\n    let lifetime = 10 // seconds\n    const ringsLifetime = lifetime\n\n    // Extend temperature wavelets lifetime (based on specified color disc time)\n    if (wavelet.event.name === TEMP_C || (wavelet.predecessor && wavelet.predecessor.event.name === TEMP_C)) {\n      const temperatureWaveletLifetime = temperatureDiskTimeout.value\n      lifetime = lifetime < temperatureWaveletLifetime ? temperatureWaveletLifetime : lifetime\n    }\n\n    const milliseconds = now - wavelet.created\n    const seconds = Math.floor(milliseconds / 1000)\n\n    if (!wavelet.options.fadein) {\n      // Fadein\n      if (consoleFadingInfo.value) console.log('Time to fadein for #' + wavelet.event.tag)\n      wavelet.options.fadein = true\n    }\n\n\n    // Fadeout wavelet rings for temperature events earlier than fadeout whole wavelet\n    if (wavelet.event.name === TEMP_C || (wavelet.predecessor && wavelet.predecessor.event.name === TEMP_C)) {\n      if (seconds >= ringsLifetime - 1 && !wavelet.options.ringsFadeout) {\n        // Fadeout rings\n        if (consoleFadingInfo.value) console.log('Time to fadeout rings for #' + wavelet.event.tag)\n        wavelet.options.ringsFadeout = true\n      }\n    }\n\n    if (seconds >= lifetime - 1 && !wavelet.options.fadeout) {\n      // Fadeout\n      if (consoleFadingInfo.value) console.log('Time to fadeout for #' + wavelet.event.tag)\n      wavelet.options.fadeout = true\n    }\n\n    if (seconds >= lifetime) {\n      // Time to remove\n      if (consoleLifetimeInfo.value) console.log('Lifetime exceeded ' + lifetime + 's for #' + wavelet.event.tag + ' – removing')\n      wavelets.value.delete(wavelet.event.tag)\n\n      // Remove from Canvas\n      container.children.forEach((waveletContainer) => {\n        if (wavelet.event.tag === waveletContainer.wavelet.event.tag) {\n          container.removeChild(waveletContainer)\n        }\n      })\n    }\n  })\n\n  setTimeout(inspectWavelets, 100)\n}\n\nconst debugMode = ref(false)\nconst isColorWavelets = ref(false)\n\n\nimport {soundLibrary} from \"@/assets/js/helpers/sound\";\n\nconst isSoundOn = ref(false)\nconst isSoundSimultaneous = ref(false)\nconst soundFolderPath = 'static/sound/'\nconst soundFileName = ((appSettings.soundFileName && appSettings.soundFileName.includes('.mp3')) ? ref(appSettings.soundFileName) : ref('bell-high.mp3'))\nlet soundFilePath = soundFolderPath + soundFileName.value\nlet sound = new Audio(soundFilePath)\n\n// Update sound file if changed\nfunction soundFileChanged() {\n  soundFilePath = soundFolderPath + soundFileName.value\n  sound = new Audio(soundFilePath)\n}\n\nfunction uploadMp3(event) {\n  let input = event.target;\n  if (!input.files.length) return\n  soundFilePath = URL.createObjectURL(input.files[0]);\n  sound = new Audio(soundFilePath)\n}\n\nconst basicSize = ref(128)\nconst diskSize = ref(128)\n\nconst mouse_x = ref(0)\nconst mouse_y = ref(0)\nconst mouseTooltip = reactive({\n  position: {\n    x: 0,\n    y: 0,\n  }\n})\n\nfunction updateCoordinates(e) {\n  if (gridMode.value) {\n    mouse_x.value = e.clientX\n    mouse_y.value = e.clientY\n    // Update mouse tooltip positioning\n    mouseTooltip.position.x = e.clientX\n    mouseTooltip.position.y = e.clientY\n  }\n}\n\nconst crosshairCursor = ref(false)\n\nconst uiPosition = ref(0)\nconst uiConfiguration = reactive({\n  positions: [\n    {\n      style: 'left: 0; top: 0;'\n    },\n    {\n      style: 'right: 0; top: 0;'\n    },\n  ]\n})\n\n\n// Pixi / Canvas/ WebGL 2\n// eslint-disable-next-line\nimport * as PIXI from 'pixi.js'\nimport {toSize, rssiConfig, isRssiSizeForEventEnabled} from \"@/assets/js/helpers/rssi\";\n\nconst pixi = new PIXI.Application({\n  width: window.innerWidth,\n  height: window.innerHeight,\n  antialias: true,\n  backgroundAlpha: true,\n  //autoDensity: true,\n  //backgroundColor: '0x000000',\n})\n\n// Common rendering container\nconst container = new PIXI.Container();\ncontainer.x = 0;\ncontainer.y = 0;\ncontainer.width = window.innerWidth\ncontainer.height = window.innerHeight\ncontainer.pivot.x = 0;\ncontainer.pivot.y = 0;\npixi.stage.addChild(container);\n\n// eslint-disable-next-line\n//const texture = PIXI.Texture.from(\"static/img/logo128.png\")\n\nfunction ticks() {\n  // Listen for animate update\n  pixi.ticker.add(() => { //delta\n\n    if (selectedRenderingType.value == WEBGL) {\n      // eslint-disable-next-line\n      container.children.forEach((waveletContainer) => {\n        //waveletContainer.alpha > .8 ? waveletContainer.alpha -= .01 : null\n        if (waveletContainer.wavelet.options.fadein) {\n          waveletContainer.alpha < 1 ? waveletContainer.alpha += .03 : null\n        }\n        if (waveletContainer.wavelet.options.fadeout) {\n          waveletContainer.alpha > 0 ? waveletContainer.alpha -= .03 : null\n        }\n        // Calculate circles\n        // eslint-disable-next-line\n        waveletContainer.children.forEach((circle) => {\n          // Fadein circle\n          if (circle.scale.x < 0.3) {\n            circle.alpha < 1 ? circle.alpha += .02 : null\n          }\n          // Fadeout circle\n          if (circle.scale.x > 0.8) {\n            circle.alpha -= .01\n          }\n          // Scale circle\n          circle.scale.x < 1 ? circle.scale.set(circle.scale.x + .025, circle.scale.y + .025) : null\n        })\n      })\n    }\n\n  });\n}\n\n/**\n *\n * @param wavelet WaveletElement\n */\nfunction drawWavelet(wavelet) {\n  // Create wavelet container\n  const waveletContainer = new PIXI.Container()\n  waveletContainer.width = basicSize.value\n  waveletContainer.height = basicSize.value\n  waveletContainer.x = wavelet.x\n  waveletContainer.y = wavelet.y\n  waveletContainer.pivot.x = waveletContainer.width / 2\n  waveletContainer.pivot.y = waveletContainer.height / 2\n  // Attach wavelet obj\n  waveletContainer.wavelet = wavelet\n  waveletContainer.alpha = 0\n  //waveletContainer.toGlobal(new PIXI.Point(0,0))\n\n  //const sprite = new PIXI.Sprite(texture)\n  //sprite.width = basicSize.value\n  //sprite.height = basicSize.value\n  //waveletContainer.addChild(sprite)\n\n  // Wavelet inner circles\n  // #1\n  let circle = new PIXI.Graphics();\n  circle.lineStyle(3, 0xffffff, 1)\n  //circle.beginFill(0xDBE5DC);\n  circle.drawCircle(0, 0, basicSize.value * 0.1)\n  //circle.endFill()\n  //circle.maxSegments = 12\n  //circle.maxLength = 5\n  //circle.adaptive = true\n  //circle.nativeLines = true\n  circle.pivot.x = waveletContainer.width / 2\n  circle.pivot.y = waveletContainer.height / 2\n  circle.position.set(waveletContainer.width / 2, waveletContainer.height / 2)\n  //circle.toGlobal(new PIXI.Point(0,0))\n  circle.scale.set(.1, .1)\n  waveletContainer.addChild(circle)\n\n\n  // Todo Add value and shine if temperature\n\n\n  container.addChild(waveletContainer)\n}\n\n\n// Rendering type\nconst selectedRenderingType = ref(SVG)\n\nfunction renderingTypeChanged(e) {\n  const selected = e.target.value\n  renderingTypes.forEach((type) => {\n    if (type.name != selected) {\n      type.enabled = false\n    }\n  })\n  selectedRenderingType.value = selected\n}\n\nonBeforeMount(() => {\n  if (appSettings) {\n    appSettings.selectedRenderingType ? selectedRenderingType.value = appSettings.selectedRenderingType : null\n    appSettings.basicSize ? basicSize.value = appSettings.basicSize : null\n    appSettings.diskSize ? diskSize.value = appSettings.diskSize : null\n    appSettings.rssiScaleFactor ? rssiScaleFactor.value = appSettings.rssiScaleFactor : null\n    appSettings.temperatureDiskTimeout ? temperatureDiskTimeout.value = appSettings.temperatureDiskTimeout : null\n    appSettings.minCelsius ? minCelsius.value = appSettings.minCelsius : null\n    appSettings.maxCelsius ? maxCelsius.value = appSettings.maxCelsius : null\n    appSettings.simulationMode ? simulationMode.value = appSettings.simulationMode : null\n    appSettings.gridMode ? gridMode.value = appSettings.gridMode : null\n    appSettings.crosshairCursor ? crosshairCursor.value = appSettings.crosshairCursor : null\n    appSettings.isSoundOn ? isSoundOn.value = appSettings.isSoundOn : null\n    appSettings.isSoundSimultaneous ? isSoundSimultaneous.value = appSettings.isSoundSimultaneous : null\n\n    if (appSettings.idsMap && appSettings.idsMap.length) {\n      appSettings.idsMap.forEach((savedTagData) => {\n        idsMap.value.set(savedTagData.tag, savedTagData)\n      })\n    }\n\n    appSettings.debugMode ? debugMode.value = appSettings.debugMode : null\n\n    //\n    appSettings.consoleEvents ? consoleEvents.value = appSettings.consoleEvents : null\n    appSettings.consoleRenderingInfo ? consoleRenderingInfo.value = appSettings.consoleRenderingInfo : null\n    appSettings.consoleLifetimeInfo ? consoleLifetimeInfo.value = appSettings.consoleLifetimeInfo : null\n    appSettings.consoleFadingInfo ? consoleFadingInfo.value = appSettings.consoleFadingInfo : null\n  }\n})\n\n//\nonMounted(() => {\n  // Simulation / connect\n  if (simulationMode.value === true) {\n    connectionStatus.value = 'green'\n    runSimulation()\n  } else {\n    connectionStatus.value = 'red'\n    connect()\n  }\n  // Remove expired wavelets\n  inspectWavelets()\n  // Pixi / canvas / WebGL\n  const canvas = document.getElementById('canvas-container')\n  canvas.appendChild(pixi.view)\n  ticks()\n})\n\n// Saving settings\nwatch([\n      selectedRenderingType,\n      basicSize,\n      diskSize,\n      rssiScaleFactor,\n      temperatureDiskTimeout,\n      minCelsius,\n      maxCelsius,\n      idsMap,\n      simulationMode,\n      gridMode,\n      crosshairCursor,\n      isSoundOn,\n      isSoundSimultaneous,\n      soundFileName,\n      renderingTypes,\n      eventsTypes,\n      debugMode,\n      rssiResizeEvents,\n      consoleEvents,\n      consoleRenderingInfo,\n      consoleLifetimeInfo,\n      consoleFadingInfo,\n    ],\n    ([\n       selectedRenderingTypeNew,\n       basicSizeNew,\n       diskSizeNew,\n       rssiScaleFactorNew,\n       temperatureDiskTimeoutNew,\n       minCelsiusNew,\n       maxCelsiusNew,\n       idsMapNew,\n       simulationModeNew,\n       gridModeNew,\n       crosshairCursorNew,\n       isSoundOnNew,\n       isSoundSimultaneousNew,\n       soundFileNameNew,\n       renderingTypesNew,\n       eventsTypesNew,\n       debugModeNew,\n       rssiResizeEventsNew,\n       consoleEventsNew,\n       consoleRenderingInfoNew,\n       consoleLifetimeInfoNew,\n       consoleFadingInfoNew,\n     ]) => {\n      if (!appSettings) {\n        appSettings = {}\n      }\n      appSettings.selectedRenderingType = selectedRenderingTypeNew\n      appSettings.basicSize = basicSizeNew\n      appSettings.diskSize = diskSizeNew\n      appSettings.rssiScaleFactor = rssiScaleFactorNew\n      appSettings.temperatureDiskTimeout = temperatureDiskTimeoutNew\n      appSettings.minCelsius = minCelsiusNew\n      appSettings.maxCelsius = maxCelsiusNew\n      appSettings.simulationMode = simulationModeNew\n      appSettings.gridMode = gridModeNew\n      appSettings.crosshairCursor = crosshairCursorNew\n      appSettings.isSoundOn = isSoundOnNew\n      appSettings.isSoundSimultaneous = isSoundSimultaneousNew\n      if (soundFileNameNew.includes('.mp3')) {\n        appSettings.soundFileName = soundFileNameNew\n      }\n\n      if (idsMapNew.size) {\n        const uploadedMap = [...idsMapNew.values()]\n        if (uploadedMap.length) {\n          appSettings.idsMap = uploadedMap\n        }\n      }\n\n      appSettings.renderingTypes = renderingTypesNew\n      appSettings.eventsTypes = eventsTypesNew\n      appSettings.debugMode = debugModeNew\n      appSettings.rssiResizeEvents = rssiResizeEventsNew\n\n      appSettings.consoleEvents = consoleEventsNew\n      appSettings.consoleRenderingInfo = consoleRenderingInfoNew\n      appSettings.consoleLifetimeInfo = consoleLifetimeInfoNew\n      appSettings.consoleFadingInfo = consoleFadingInfoNew\n\n      localStorage.setItem('appSettings', JSON.stringify(appSettings))\n    })\n</script>\n\n<style scoped lang=\"sass\">\nbody\n  background-color: #000\n\n.display\n  position: absolute\n  left: 0\n  top: 0\n  right: 0\n  bottom: 0\n  background-color: #000\n  overflow: hidden\n  &_bg\n    background-size: cover\n    background-position: center\n    background-color: transparent\n  &_bg-img\n    background-image: url(@/static/backgrounds/me.jpg)\n\n.ui-wrapper\n  position: absolute\n  width: 260px\n  min-height: 100vh\n  opacity: 1\n  z-index: 9999\n  overflow-x: hidden\n  overflow-y: auto\n  scrollbar-width: none\n\n  & > div\n    display: none\n    background-color: rgba(33, 33, 33, .95)\n    padding: 10px\n\n  &:hover > div\n    display: block\n\n  &::-webkit-scrollbar\n    display: none\n\n\n.ui-container-toggle\n  position: absolute\n\n.connection-status\n  border-radius: 5px\n  width: 10px\n  height: 10px\n\n\n.mouse-coordinates-tooltip\n  color: wheat\n  position: absolute\n  font-size: 14px\n  font-weight: bold\n  left: 0\n  top: 0\n  transform: translate(0, calc(-100% - 16px))\n  padding: 0 4px\n  background-color: rgba(0, 0, 0, .5)\n  border-radius: 4px\n  z-index: 999\n\nhr\n  box-shadow: 0 1px 0 0 wheat\n\n#canvas-container\n  width: 100vw\n  height: 100vh\n\n#video\n  position: absolute\n  width: 100vw\n  height: 100vh\n  object-fit: cover\n</style>\n","import script from \"./DisplayComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DisplayComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DisplayComponent.vue?vue&type=style&index=0&id=81f2b99c&scoped=true&lang=sass\"\n\nimport exportComponent from \"/Users/andrew/_Upwork Projects/Wiliot/Wow Project/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-81f2b99c\"]])\n\nexport default __exports__","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0710d3d3&lang=sass\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport \"bootstrap\"\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/projects/wavelets/release/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwavelets\"] = self[\"webpackChunkwavelets\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2763); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ids","Map","generate","alreadyGenerated","generated","uid","Math","random","pow","toString","slice","get","set","ClientMQTT","constructor","this","connection","host","port","endpoint","clean","connectTimeout","reconnectPeriod","clientId","username","password","subscription","topic","qos","receivedMessages","qosList","label","value","client","connected","subscribeSuccess","data","onConnectionLost","console","log","createConnection","callback","statusInformer","options","connectUrl","mqtt","error","on","message","msg","TextDecoder","decode","doSubscribe","subscribe","res","doUnSubscribe","unsubscribe","doPublish","payload","publish","destroyConnection","end","mqttclient","RenderingElement","id","x","y","created","Date","now","size","basicSize","diskSize","colored","debug","event","tag","name","raw","timestamp","predecessor","rendering","inject","WaveletElement","super","type","color","fadein","fadeout","ringsFadeout","TEMP_C","DBUG","ACTV","LOCH","GEOLOC","RSSI","eventsConfig","eventsTypes","enabled","SVG","GIF","WEBGL","renderingConfig","types","description","hueColor","temperature","minCelsius","maxCelsius","maxHsl","minHsl","rngHsl","rngTemp","degCnt","hslsDeg","rgbColor","h","s","l","k","n","a","min","f","max","humanReadableTime","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getMilliseconds","__exports__","trim","str","ch","start","length","substring","EventsBuilder","string","message_pieces","split","isEventEnabled","forEach","eventType","messageHasEvent","some","includes","msg_piece","replace","Number","parseFloat","toFixed","parseInt","parse","list","coordinates","rows","line","splited","settings","soundLibrary","files","toSize","avgRssi","rssi","scale","rssiConfig","resizeEvents","isRssiSizeForEventEnabled","find","eventConf","appSettings","localStorage","getItem","JSON","setItem","stringify","wavelets","ref","idsMap","rssiScaleFactor","temperatureDiskTimeout","backgroundEnabled","backgroundVideo","gridMode","consoleEvents","consoleRenderingInfo","consoleLifetimeInfo","consoleFadingInfo","consoleSettings","state","connect","process","renderConnection","disconnect","renderingTypes","reactive","rssiResizeEvents","watch","newEventsTypes","clear","averageRssi","tagCsvData","wavelet","has","existing","isColorWavelets","debugMode","isSoundOn","isSoundSimultaneous","sound","Audio","soundFilePath","play","selectedRenderingType","drawWavelet","openFile","input","target","reader","FileReader","onload","result","readAsText","simulationMode","simulationSwitched","connectionStatus","runSimulation","simulatedAverageEventsPerSecond","connectionState","generateMessage","divider","setTimeout","status","min_t","max_t","floor","eventsType","round","inspectWavelets","lifetime","ringsLifetime","temperatureWaveletLifetime","milliseconds","delete","container","children","waveletContainer","removeChild","soundFolderPath","soundFileName","soundFileChanged","uploadMp3","URL","createObjectURL","mouse_x","mouse_y","mouseTooltip","position","updateCoordinates","e","clientX","clientY","crosshairCursor","uiPosition","uiConfiguration","positions","style","pixi","PIXI","width","window","innerWidth","height","innerHeight","antialias","backgroundAlpha","ticks","ticker","add","alpha","circle","pivot","lineStyle","drawCircle","addChild","stage","renderingTypeChanged","selected","onBeforeMount","savedTagData","onMounted","canvas","document","getElementById","appendChild","view","selectedRenderingTypeNew","basicSizeNew","diskSizeNew","rssiScaleFactorNew","temperatureDiskTimeoutNew","minCelsiusNew","maxCelsiusNew","idsMapNew","simulationModeNew","gridModeNew","crosshairCursorNew","isSoundOnNew","isSoundSimultaneousNew","soundFileNameNew","renderingTypesNew","eventsTypesNew","debugModeNew","rssiResizeEventsNew","consoleEventsNew","consoleRenderingInfoNew","consoleLifetimeInfoNew","consoleFadingInfoNew","uploadedMap","values","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}